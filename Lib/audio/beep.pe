# Beep code.
__autosem__

# - console beep may not work if we can't rw /dev/console or /dev/tty0 (needed by linuxfb)
# - soundcard beep is more expensive CPU-wise
# - soundcard beep will "fail" if the volume is zero
# - soundcard beep will "fail" if an mp3 player is running
# - console beep "fails" if we're in another vt
# - there is yet a third way by writting \a to stdout. may not work if redirected.
# - which is nicer? YMMV (do sysconfig option?)
# === hairy interface

from audio import dev
import thread, os

BEEP_LOCK = thread.xlock ()

def audio_beep (hz, dur, vol)
with (BEEP_LOCK) try {
	n = int (dur * 11025)
	a = _buffer (2 * n)
	dev.C.make_harmonic (a, n, hz, int (32000 * minmax (0, vol, 100) / 100.0))
	d = dev.AudioDev ()
	# test zero volume?
	if (!d.grab (11025, 1))
		return False
	d.play (a)
	d.release ()
	return True
}

def console_beep (hz, dur, vol)
with (BEEP_LOCK) try {
	cbeep = dev.C.beep
	fd = os.openfd ("/dev/tty0", os.O_WRONLY, 0) ??
	     os.openfd ("/dev/console", os.O_WRONLY, 0)
	if (cbeep (fd, hz) == -1)
		return False
	sleep (dur)
	cbeep (fd, 0)
	os.close (fd)
	return True
}

def terminal_beep (hz, dur, vol)
with (BEEP_LOCK) try {
	if (sys.istty) {
		sys.stdout.write ("\x07")
		sys.stdout.flush ()
		return True
	}
}

def can_beep_console ()
{
	try dev.C.beep
	except return False
	try os.close (os.openfd ("/dev/console", os.O_WRONLY, 0))
	except try os.close (os.openfd ("/dev/tty0", os.O_WRONLY, 0))
	       except return False
	return True
}

def either_beep (*a)
	return audio_beep (*a) or console_beep (*a) or terminal_beep (*a)
std_beep = can_beep_console () ? console_beep : audio_beep

def bg_beep (hz, dur, vol)
	thread.start_new (std_beep, hz, dur, vol)
def bg_either_beep (hz, dur, vol)
	thread.start_new (either_beep, hz, dur, vol)

# standard application beeps:

def IRCBeep ()
	return bg_either_beep (900, 0.09, 50)
def TorrentBeep ()
	return bg_either_beep (500, 0.09, 50)

if (__name__ == __main__)
{
	console_beep (900, 0.1, 80)
	audio_beep (600, 0.1, 80)
	console_beep (600, 1.1, 80)
	terminal_beep (600, 1, 1)
}
