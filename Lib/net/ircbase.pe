##  IRC protocol
##
##  This program is free software; you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation; either version 2 of the License, or
##  (at your option) version 3 of the License.

__autosem__

# RFC 1459
#
# Base IRC client
#

# irc packet message

import re
CMDRe = re.re (r':(.*?)\s+(\w+|\d\d\d)\s+([^:]*)(.*)')

def parsecmd (cmd)
{
	m = CMDRe (cmd)
	return m [1], m [2], m [3].split (), m [4][1:]
}

#
# That's like the readline() method of the socket-as-file object,
# but it strips CR-LF and it is a generator
#

gen ircsink (sock)
{
	buf = ''

	while (x = sock.recv ()) {
		if (buf)
			x = buf + x
		s = 0
		while ((e = x.find ('\r\n', s)) != -1) {
			yield x [s:e]
			s = e + 2
		}
		buf = x [s:]
	}
}

class irc
{
	method __init__ (host, $nick, port=6667)
	{
		$sock = @socket.Connect (host, 6667)

		#$cmd ('PASS needed?');
		$cmd ("NICK %s" %nick)
		$cmd ("USER a b c d")
	}

	method cmd (c)
		$sock.send (c + '\r\n')

	method join (chan)
		$cmd ("JOIN " + chan)

	method msg (to, msg)
		$sock.send ("PRIVMSG %s :%s\r\n" %(to, msg))

	method run ()
	{
		for (i in ircsink ($sock)) {
			if (!i) continue

			if.continue (i [0] != ':')
				if (i.sw ("PING "))
					$cmd ("PONG " + i [6:])
				else $do_noprefix (i)

			by, cmd, params, trail = parsecmd (i)
			if (cmd in ("PRIVMSG", "NOTICE"))
				$do_msg (by, cmd, params, trail)
			else if (cmd in ("JOIN", "QUIT", "PART"))
				$do_action (by, cmd, params, trail)
			else if (cmd != '372')
				$do_generic (by, cmd, params, trail)
		}
	}

	# subclass

	method do_noprefix (msg)
		print "*********** [%s] **********" %msg

	method do_generic (by, cmd, params, trail)
		if (cmd != '372')
			print "SOMETHING ELSE:", by, cmd, params, trail

	method do_msg (by, cmd, params, trail)
		print "[%s]: %s" % (by.partition ('!')[0], trail)

	method do_action (by, cmd, params, trail)
		print "%s has left (%s)" % (by.partition ('!')[0], trail)
}


###############################

if (__name__ == '__main__') {
	import thread
	from time import sleep

	IRC = irc ('irc.freenode.net', 'sirLanceLoot')
#	IRC.msg ('nickserv', 'identify %s' % 'lootit')
	thread.start_new_thread (IRC.run, ())
	sleep (5)
	IRC.join ("#python")

	sleep (50000)
}
