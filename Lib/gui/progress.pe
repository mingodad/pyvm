__autosem__
from widget import widget

class progress (widget)
{
	method Init (**kw)
	{
		if ('h' not in kw) kw ['h'] = 11
		if ("w" in kw) $elastic = False
		$col = $A.color_blue
		$widget_init (**kw)
		$total = 0
	}

	method _resize_w (dw)
		$w += dw

	method getaw ()
		return min (int (float ($w * $done) / $total), $w)

	method Draw ()
	{
		if (!$total) $draw_blank ()
		else {
			aw = $getaw ()
			$fill_rect (0, 0, aw, $h, $col)
			$fill_rect (aw, 0, $w - aw, $h, $A.color_bg)
			$outline ('sunken')
		}
	}

#	method init ($total)
#	{
#		$done = 0
#		$Draw ()
#		$A.flush ()
#	}
#
#	method Advance (x)
#	{
#		aw = $getaw ()
#		$done += x
#		if (aw != $getaw ()) {
#			$Draw ()
#			$A.flush ()
#		}
#	}

	method redraw ()
	{
		$Draw ()
		$A.flush ()
	}

	# Assume that a progress widget will be used asynchronously
	# (iow, not from the main GUI thread, but a secondary thread)

	method Advance2 ($done, $total)
		$wm.async ($redraw)

	method Close ()
	{
		$total = 0
		$wm.async ($redraw)
	}
}

# mini progress bar that can be used with
#	with (PB)
# and moves the line during the executed code.
class work_in_progress (widget)
{
	method Init ($color=0x0000ff, **kw)
	{
		kw ["h"] = 2
		$elasticH = False
		$elasticW = True
		$widget_init (**kw)
		$l = @thread.xlock (False)
		@thread.start_new ($run)
	}

	method run ()
	{
		x = 0
		while (1) {
			if ($l.locked ()) x = 0
			$l.ack ()
			if ((x += 5) > $w) x = 0
			$fill_rect (0, 0, x, $h, $color)
			$fill_rect (x, 0, $w-x, $h, 0xffffff)
			$wm.flush ()
			sleep (0.2)
		}
	}

	method Draw ()
		$draw_blank (0xffffff)

	method __enter__ ()
		$l.release ()
	method __exit__ (*args)
	{
		$l.acquire ()
		$Draw ()
	}
	method __context__ ()
		return self
}
