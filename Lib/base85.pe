##  ASCII85 Encoding
##
##  This program is free software; you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation; either version 2 of the License, or
##  (at your option) version 3 of the License.

__autosem__

# Base85 is a more efficient encoding than Base64.  The basic idea
# is to encode 4 bytes of binary input to 5 bytes of 7-bit ASCII.
# The implementation of base85 in PDF does more than that since it
# converts 4 zeroes to the special character 'z'.  This here is
# based on the PDF implementation.  There is another one used in
# git's binary diffs.

C = @DLL.Import ("base85", "-O3", pelf=1)

def decode (txt)
{
	if (w = C.count_ws (txt, len (txt))) {
		txt2 = _buffer (len (txt) - w)
		C.remove_ws (txt2, txt, len (txt))
		txt = txt2
	}
	out = _buffer (C.decoded_size (txt, len (txt)))
	if (C.decode (out, txt, len (txt))) {
		print "Failed to decode base85 stream"
		return
	}
	return out
}

def encode (txt)
{
	l = len (txt)
	s = 5 * (l /4)
	if (l % 4) s += (l % 4) + 1
	out = _buffer (s)
	return out [:C.encode (out, txt, len (txt))]
}

if (__name__ == __main__)
{
	USAGE = "usage: base85 [e|d] file"
	t = sys.argp.pop_one_arg ()
	f = sys.argp.filename_ex ()
	if (t == 'e') {
		f = readfile (f)
		f = encode (f)
		p = 0
		while (p < len (f)) {
			to = min (p + 80, len (f))
			print f [p:to]
			p = to
		}
	} else if (t == 'd') {
		sys.stdout.write (decode (readfile (f)))
	}
}
